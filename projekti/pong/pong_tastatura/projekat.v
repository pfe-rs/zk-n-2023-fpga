
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module projekat(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX5,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//  GPIO za matrix
	output			  [15:0]		GPIO_0,
	// preskacemo 9



	input 		          		PS2_CLK,

	input 		          		PS2_DAT

	//
	

);



//=======================================================
//  REG/WIRE declarations
//=======================================================

wire [32:0] sekunda;

//=======================================================
//  Structural coding
//=======================================================

	//assign LEDR = 10'hAA;
	//hex hex1(SW[3:0], HEX0[6:0]);
	//hex hex2(SW[7:4], HEX1[6:0]);
	//hex hex3(SW[9:7], HEX1[6:0]);
	//assign sekunda = 32'd0;
	
	
	wire [7:0] r;
	wire [7:0] k;
	
	//redovi, pozitivni, mozda increment
	assign GPIO_0[8]  = r[0];
	assign GPIO_0[13] = r[1];
	assign GPIO_0[7]  = r[2];
	assign GPIO_0[11] = r[3];
	assign GPIO_0[0]  = r[4];
	assign GPIO_0[6]  = r[5];
	assign GPIO_0[1]  = r[6];
	assign GPIO_0[4]  = r[7];

	
	// kolone, negativne;
	assign GPIO_0[12] = k[0];
	assign GPIO_0[2]  = k[1];
	assign GPIO_0[3]  = k[2];
	assign GPIO_0[9]  = k[3];
	assign GPIO_0[5]  = k[4];
	assign GPIO_0[10] = k[5];
	assign GPIO_0[14] = k[6];
	assign GPIO_0[15] = k[7];
	
		
	
	// proba single
	
	//assign GPIO_0[15:0] = 0;
//	assign r1 = 0;
//	assign r2 = 1; 
//	assign r3 = 1;
//	assign r4 = 1;
//	assign r5 = 1;
//	assign r6 = 1;
//	assign r7 = 1;
//	assign r8 = 1;
//	
//	//assign k1 = 1;
//	assign k2 = 0; 
//	assign k3 = 0;
//	assign k4 = 0;
//	assign k5 = 0;
//	assign k6 = 0;
//	assign k7 = 0;
//	assign k8 = 0;
//	
//	assign k1 = 1;
//	assign r1 = 0;

	wire [15:0] sve;
	wire [3:0] x;
	wire [3:0] y;
	wire [3:0] pom1;
	wire [3:0] pom2;
	wire [3:0] smer;
	wire [3:0] poeni1;
	wire [3:0] poeni2;
//	assign pom1 = 4'd2;
//	assign pom2 = 4'd2;
	//assign y = 0; // prva kolona samo
	wire [3:0] x_b,y_b;
	wire [3:0] game;
	wire [3:0] game2;
	
	// tastatura
	wire [123:0] keyreg;
	wire [7:0] buttons;
	
	assign r = sve[15:8];
	assign k = sve[7:0];
	wire first;
	one_sec sek(CLOCK_50, sekunda);
	multipleks mp(CLOCK_50, sve[15:0], x,y);
	ps2parse tastature(PS2_CLK, PS2_DAT, buttons, keyreg);
	keys dugmici(sekunda,pom1,pom2,buttons,game,first,game2);
	rand rnd(CLOCK_50,KEY[0],smer);
	ball bl(sekunda,smer,x_b,y_b,pom1,pom2,poeni1,poeni2,game,first,game2);
	red_sweep rd(CLOCK_50,pom1,pom2,x,y,x_b,y_b);
	hex hex1(poeni1, HEX0[6:0]);
   hex hex2(poeni2,  HEX5[6:0]);
	//assign rst_n = 1;
endmodule
